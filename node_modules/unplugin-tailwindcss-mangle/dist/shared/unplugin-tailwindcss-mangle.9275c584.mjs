import fs from 'node:fs/promises';
import path from 'node:path';
import { groupBy } from '@tailwindcss-mangle/shared';

const pluginName = "unplugin-tailwindcss-mangle";

function escapeStringRegexp(str) {
  if (typeof str !== "string") {
    throw new TypeError("Expected a string");
  }
  return str.replaceAll(/[$()*+.?[\\\]^{|}]/g, "\\$&").replaceAll("-", "\\x2d");
}
function getGroupedEntries(entries, options = {
  cssMatcher(file) {
    return /\.css$/.test(file);
  },
  htmlMatcher(file) {
    return /\.html?$/.test(file);
  },
  jsMatcher(file) {
    return /\.[cm]?js$/.test(file);
  }
}) {
  const { cssMatcher, htmlMatcher, jsMatcher } = options;
  const groupedEntries = groupBy(entries, ([file]) => {
    if (cssMatcher(file)) {
      return "css";
    } else if (htmlMatcher(file)) {
      return "html";
    } else if (jsMatcher(file)) {
      return "js";
    } else {
      return "other";
    }
  });
  if (!groupedEntries.css) {
    groupedEntries.css = [];
  }
  if (!groupedEntries.html) {
    groupedEntries.html = [];
  }
  if (!groupedEntries.js) {
    groupedEntries.js = [];
  }
  if (!groupedEntries.other) {
    groupedEntries.other = [];
  }
  return groupedEntries;
}
function getCacheDir(basedir = process.cwd()) {
  return path.resolve(basedir, "node_modules/.cache", pluginName);
}
async function ensureDir(p) {
  try {
    await fs.access(p);
  } catch {
    await fs.mkdir(p, {
      recursive: true
    });
  }
}

export { escapeStringRegexp as a, getCacheDir as b, ensureDir as e, getGroupedEntries as g, pluginName as p };
